{"version":3,"sources":["assets/home.svg","assets/about.svg","assets/report.svg","components/Sidebar/MenuEntry.tsx","components/Sidebar/Content.tsx","components/Sidebar/Sidebar.tsx","components/About/About.tsx","pages/About.tsx","app/hooks.ts","components/Input/DatePicker.tsx","components/Input/TextInput.tsx","components/Input/DateInput.tsx","constants/constants.ts","components/Input/SelectInput.tsx","features/schedule/scheduleSlice.ts","api/schedule.tsx","components/AppointmentView/AppointmentView.tsx","assets/bunny.svg","components/DialogBox/DialogBox.tsx","components/Filter/Filter.tsx","components/Header/Header.tsx","components/AppointmentList/StatusBadge.tsx","components/AppointmentList/AppointmentEntry.tsx","components/AppointmentList/AppointmentList.tsx","assets/rocket.svg","components/Error404/Error404.tsx","pages/Calendar.tsx","App.tsx","reportWebVitals.ts","app/store.ts","index.tsx"],"names":["MenuEntry","name","icon","color","selected","p","bgColor","borderRadius","_hover","cursor","direction","gridGap","src","aria-label","fontWeight","Content","fontSize","mb","to","Home","About","href","Report","Sidebar","useDisclosure","isOpen","onOpen","onClose","btnRef","useRef","w","maxW","h","size","Hamburger","display","ref","onClick","placement","finalFocusRef","React","memo","alignItems","justifyContent","alignContent","textAlign","loop","play","animationData","WorkingAnimation","style","width","AboutPage","px","py","minW","useAppDispatch","useDispatch","useAppSelector","useSelector","DatePicker","props","isClearable","showPopperArrow","rest","isLight","useColorMode","colorMode","className","InputBox","value","label","placeholder","onChange","required","DateInput","placeholderText","STATUS","SelectInput","variant","map","initialState","list","undefined","filter","scheduleSlice","createSlice","reducers","updateSchedule","state","action","payload","select","find","el","id","clearSelected","removeById","edit","_id","targetIndex","findIndex","add","unshift","setFilter","actions","API_URL","process","getSchedule","a","filters","axios","get","addSchedule","schedule","post","editSchedule","patch","deleteSchedule","delete","AppointmentView","isUpdate","useState","title","setTitle","Date","date","setDate","status","setStatus","toast","useToast","actionCaption","dispatch","useEffect","e","console","error","showSuccess","message","description","duration","isClosable","position","showError","handleSubmit","data","response","handleDelete","handleBack","textDecoration","flexGrow","onSubmit","TextInput","target","d","String","mt","type","colorScheme","DialogBox","component","isCentered","Filter","Header","isOpenFilter","onOpenFilter","onCloseFilter","Bunny","lineHeight","getColor","StatusBadge","textTransform","AppointmentEntry","moment","format","Appointment","useBreakpointValue","base","md","fetchSchedule","ml","overflowY","maxH","entry","Error404","Rocket","Calendar","displayVariant","AppointmentList","App","minH","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","scheduleReducer","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ed5f914.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home.774fb1bd.svg\";","export default __webpack_public_path__ + \"static/media/about.5c55e9fe.svg\";","export default __webpack_public_path__ + \"static/media/report.7a8d9fc2.svg\";","import React from \"react\";\nimport { Box, Flex, Text, Image } from \"@chakra-ui/react\";\n\ntype Props = {\n  name: string; // name\n  icon: string; // local url\n  selected?: boolean;\n};\nconst MenuEntry = ({ name, icon, selected }: Props) => {\n  const bgColor = selected ? \"none\" : \"none\";\n  // const bgColor = selected ? \"#0081F0\" : \"none\";\n  // const color = selected ? \"white\" : \"gray.500\";\n  const color = selected ? \"gray.500\" : \"gray.500\";\n  return (\n    <Box\n      p={3}\n      bgColor={bgColor}\n      borderRadius={12}\n      _hover={{ cursor: \"pointer\", bgColor: \"gray.200\" }}\n    >\n      <Flex direction=\"row\" gridGap={2}>\n        <Image src={icon} aria-label={name} color={color} />\n        <Text color={color} fontWeight=\"bold\">\n          {name}\n        </Text>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default MenuEntry;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"@chakra-ui/react\";\n\n// Local Assets\nimport Home from \"../../assets/home.svg\";\nimport About from \"../../assets/about.svg\";\nimport Report from \"../../assets/report.svg\";\n\n// Local Imports\nimport MenuEntry from \"./MenuEntry\";\n\nconst Content = () => {\n  return (\n    <>\n      {/* App Title */}\n      <Text color=\"blue.500\" fontWeight=\"bold\" fontSize={24} mb={4}>\n        Calendar App\n      </Text>\n\n      {/* Menu */}\n      <Link to=\"/\">\n        <MenuEntry name=\"Home\" icon={Home} selected={true} />\n      </Link>\n      <Link to=\"/about\">\n        <MenuEntry name=\"About\" icon={About} selected={false} />\n      </Link>\n      <a href=\"https://github.com/kristianespina/ethereal-calendar/issues\">\n        <MenuEntry name=\"Report\" icon={Report} selected={false} />\n      </a>\n    </>\n  );\n};\n\nexport default Content;\n","import React, { useRef } from \"react\";\nimport {\n  Flex,\n  Drawer,\n  DrawerOverlay,\n  DrawerCloseButton,\n  DrawerBody,\n  DrawerContent,\n  useDisclosure,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\n\nimport Content from \"./Content\";\n\nconst Sidebar = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  return (\n    <Flex\n      w={[\"auto\", \"auto\", \"auto\", \"300px\"]}\n      maxW=\"300px\"\n      h=\"100%\"\n      p={[0, 0, 4, 4]}\n    >\n      <IconButton\n        aria-label=\"Open Menu\"\n        size=\"lg\"\n        bgColor=\"white\"\n        icon={<HamburgerIcon />}\n        display={[\"flex\", \"flex\", \"flex\", \"none\"]}\n        ref={btnRef}\n        onClick={onOpen}\n      />\n      <Drawer\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n\n          <DrawerBody>\n            <Content />\n          </DrawerBody>\n\n          {/* <DrawerFooter>\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\n              Cancel\n            </Button>\n            <Button colorScheme=\"blue\">Save</Button>\n          </DrawerFooter> */}\n        </DrawerContent>\n      </Drawer>\n      {/*Profile */}\n      <Flex\n        direction=\"column\"\n        w=\"100%\"\n        display={[\"none\", \"none\", \"none\", \"flex\"]}\n      >\n        <Content />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default React.memo(Sidebar);\n","import React from \"react\";\nimport { Flex, Box, Text, Container } from \"@chakra-ui/react\";\nimport Lottie from \"react-lottie-player\";\n// Local Imports\nimport WorkingAnimation from \"../../assets/working.json\";\n\nconst About = () => {\n  return (\n    <Flex\n      direction={[\"column\", \"column\", \"row\", \"row\"]}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      alignContent=\"center\"\n    >\n      <Box textAlign=\"center\">\n        <Lottie\n          loop\n          play\n          animationData={WorkingAnimation}\n          style={{ width: 360 }}\n        />\n      </Box>\n      <Box>\n        <Container>\n          <Text fontWeight=\"bold\" fontSize={24}>\n            About this Project\n          </Text>\n          <Text fontSize={12}>\n            This project is made using ReactJS (with Typescript)\n          </Text>\n        </Container>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Flex, Box } from \"@chakra-ui/react\";\n\n// Local Components\nimport { About } from \"../components/About\";\nconst AboutPage = () => {\n  return (\n    <Flex direction=\"column\" w=\"770px\" gridGap={4} p={[4, 4, 4, 0]}>\n      <Box bgColor=\"white\" px={4} py={8} borderRadius={12}>\n        <Flex direction={[\"column\", \"column\", \"row\", \"row\"]} gridGap={4}>\n          <Box minW={[\"full\", \"full\", \"240px\", \"240px\"]}>\n            <About />\n          </Box>\n        </Flex>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default AboutPage;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\nimport ReactDatePicker, { ReactDatePickerProps } from \"react-datepicker\";\nimport { useColorMode } from \"@chakra-ui/react\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./DatePicker.css\";\n\nfunction DatePicker(props: ReactDatePickerProps) {\n  const { isClearable = false, showPopperArrow = false, ...rest } = props;\n  const isLight = useColorMode().colorMode === \"light\"; //you can check what theme you are using right now however you want\n\n  return (\n    <div className={isLight ? \"light-theme\" : \"dark-theme\"}>\n      <ReactDatePicker\n        isClearable={isClearable}\n        showPopperArrow={showPopperArrow}\n        className=\"react-datapicker__input-text\"\n        {...rest}\n      />\n    </div>\n  );\n}\n\nexport default DatePicker;\n","import React from \"react\";\nimport { Text, Input, Box } from \"@chakra-ui/react\";\n\ntype Props = {\n  value?: string;\n  label: string;\n  placeholder?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\nconst InputBox = ({ value, label, placeholder, onChange }: Props) => {\n  return (\n    <Box>\n      <Text fontWeight=\"bold\" fontSize={12} mb={1}>\n        {label}\n      </Text>\n      <Input\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        bgColor=\"gray.200\"\n        required\n      />\n    </Box>\n  );\n};\n\nexport default InputBox;\n","import React from \"react\";\nimport { Text, Box } from \"@chakra-ui/react\";\n\nimport DatePicker from \"./DatePicker\";\n\ntype Props = {\n  label: string;\n  placeholder?: string;\n  onChange: (d: Date) => void;\n  value?: Date;\n};\nconst DateInput = ({ value, label, placeholder, onChange }: Props) => {\n  return (\n    <Box>\n      <Text fontWeight=\"bold\" fontSize={12} mb={1}>\n        {label}\n      </Text>\n      <DatePicker\n        placeholderText={placeholder}\n        onChange={onChange}\n        selected={value}\n        required\n      />\n    </Box>\n  );\n};\n\nexport default DateInput;\n","export const STATUS = [\"dropped\", \"pending\", \"ongoing\", \"done\"];\n","import React from \"react\";\nimport { Text, Select, Box } from \"@chakra-ui/react\";\n\nimport { STATUS } from \"../../constants/constants\";\n\ntype Props = {\n  value?: string;\n  label: string;\n  placeholder?: string;\n  onChange: (e: any) => void;\n};\n\nconst SelectInput = ({ value, label, placeholder, onChange }: Props) => {\n  return (\n    <Box>\n      <Text fontWeight=\"bold\" fontSize={12} mb={1}>\n        {label}\n      </Text>\n      <Select\n        variant=\"filled\"\n        bgColor=\"gray.200\"\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n        required\n      >\n        {STATUS.map((value) => (\n          <option key={value} value={value}>\n            {value}\n          </option>\n        ))}\n      </Select>\n    </Box>\n  );\n};\n\nexport default SelectInput;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { ScheduleState, Schedule } from \"../../types/schedule\";\n\n// Define the initial state using that type\nconst initialState: ScheduleState = {\n  list: [],\n  selected: undefined,\n  filter: \"\",\n};\n\nexport const scheduleSlice = createSlice({\n  name: \"schedule\",\n  initialState,\n  reducers: {\n    updateSchedule: (state, action: PayloadAction<Schedule[]>) => {\n      return {\n        ...state,\n        list: action.payload,\n      };\n    },\n    select: (state, action: PayloadAction<number>) => {\n      state.selected = state.list.find((el) => el.id === action.payload);\n    },\n    clearSelected: (state) => {\n      state.selected = undefined;\n    },\n    removeById: (state, action: PayloadAction<number>) => {\n      state.list = state.list.filter((el) => el.id !== action.payload);\n    },\n    edit: (state, action: PayloadAction<Schedule>) => {\n      const _id = action.payload.id;\n      const targetIndex = state.list.findIndex((el) => el.id === _id);\n      state.list[targetIndex] = action.payload;\n    },\n    add: (state, action: PayloadAction<Schedule>) => {\n      state.list.unshift(action.payload);\n    },\n    setFilter: (state, action: PayloadAction<string>) => {\n      state.filter = action.payload;\n    },\n  },\n});\n\nexport const {\n  updateSchedule,\n  select,\n  clearSelected,\n  removeById,\n  edit,\n  add,\n  setFilter,\n} = scheduleSlice.actions;\n\nexport default scheduleSlice.reducer;\n","import axios from \"axios\";\nimport { Schedule } from \"../types/schedule\";\n\nconst API_URL = process.env.REACT_APP_API_HOST;\n\nexport const getSchedule = async (filters = \"\") => {\n  return await axios.get(`${API_URL}/schedule${filters}`);\n};\n\nexport const addSchedule = async (schedule: Partial<Schedule>) => {\n  return await axios.post(`${API_URL}/schedule`, schedule);\n};\n\nexport const editSchedule = async (schedule: Schedule) => {\n  return await axios.patch(`${API_URL}/schedule/${schedule.id}`, schedule);\n};\n\nexport const deleteSchedule = async (schedule: Schedule) => {\n  return await axios.delete(`${API_URL}/schedule/${schedule.id}`);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Flex, Box, Button, Spacer, useToast } from \"@chakra-ui/react\";\n// Components\nimport { TextInput, DateInput } from \"../Input\";\n// Hooks\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport {\n  add,\n  edit,\n  clearSelected,\n  removeById,\n} from \"../../features/schedule/scheduleSlice\";\nimport SelectInput from \"../Input/SelectInput\";\n// API\nimport { editSchedule, addSchedule, deleteSchedule } from \"../../api/schedule\";\nimport { Schedule } from \"../../types/schedule\";\nimport { Status } from \"../../constants/enums\";\ntype Props = {\n  isUpdate?: boolean;\n  onClose?: () => void;\n};\n\nconst AppointmentView: React.FC<Props> = ({ isUpdate, onClose }) => {\n  const [title, setTitle] = useState<string>();\n  const [date, setDate] = useState<Date>(new Date());\n  const [status, setStatus] = useState<Status | string>();\n  const toast = useToast();\n  const { selected } = useAppSelector((state) => state.schedule);\n\n  const display = isUpdate ? \"flex\" : \"none\";\n  const actionCaption = isUpdate ? \"Update\" : \"Create\";\n  const dispatch = useAppDispatch();\n\n  // Handlers\n  const onChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  };\n  const onChangeDate = (d: Date) => {\n    setDate(new Date(d));\n  };\n  const onChangeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setStatus(e.target.value);\n  };\n\n  useEffect(() => {\n    // Update view\n    try {\n      setTitle(selected?.name ?? \"\");\n      selected?.date && setDate(new Date(selected.date));\n      setStatus(selected?.status);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [selected]);\n\n  // Reusable function\n  const showSuccess = (message: String) => {\n    toast({\n      title: \"Successful\",\n      description: message,\n      status: \"success\",\n      duration: 3000,\n      isClosable: true,\n      position: \"top\",\n    });\n  };\n  const showError = (message: String) => {\n    toast({\n      title: \"Failed\",\n      description: message,\n      status: \"error\",\n      duration: 3000,\n      isClosable: true,\n      position: \"top\",\n    });\n  };\n  // Handlers\n  const handleSubmit = async () => {\n    // Action: Update\n    if (isUpdate) {\n      if (selected) {\n        const data: Schedule = {\n          ...selected,\n          name: title || \"\",\n          status: status,\n          date: date,\n        };\n        const response = await editSchedule(data);\n        if (response.status === 200) {\n          // Update store\n          onClose && onClose();\n          dispatch(edit(response.data));\n          showSuccess(\"Successfully edited the schedule\");\n        } else {\n          showError(\"Cannot edit schedule\");\n        }\n      } else {\n        showError(\"Please select a schedule first\");\n      }\n    }\n\n    // Action: Create\n    if (!isUpdate) {\n      const data: Partial<Schedule> = {\n        name: title ?? \"\",\n        status: status,\n        date: date,\n      };\n      const response = await addSchedule(data);\n      if (response.status === 201) {\n        // Update store\n        onClose && onClose();\n        dispatch(add(response.data));\n        showSuccess(\"Successfully created schedule\");\n      } else {\n        showError(\"Cannot create schedule\");\n      }\n    }\n  };\n  const handleDelete = async () => {\n    const response = selected && (await deleteSchedule(selected));\n    if (response?.status === 200) {\n      selected && dispatch(removeById(selected.id));\n      showSuccess(\"Successfully deleted schedule\");\n      dispatch(clearSelected());\n    } else {\n      showError(\"Cannot delete schedule\");\n    }\n  };\n  const handleBack = async () => {\n    dispatch(clearSelected());\n    onClose && onClose();\n  };\n  return (\n    <Flex direction=\"column\" w=\"full\" gridGap={4} justifyContent=\"center\">\n      {/* Title */}\n      <Flex direction=\"row\" w=\"full\">\n        <Box\n          position=\"absolute\"\n          fontSize={12}\n          fontWeight=\"bold\"\n          color=\"gray.500\"\n          py={1}\n          _hover={{\n            color: \"blue.700\",\n            cursor: \"pointer\",\n            textDecoration: \"underline\",\n          }}\n          display={display}\n          onClick={handleBack}\n        >\n          Back\n        </Box>\n        <Box\n          flexGrow={1}\n          textAlign=\"center\"\n          fontSize={18}\n          fontWeight=\"bold\"\n          color=\"gray.800\"\n        >\n          {isUpdate ? \"Update\" : \"Create appointment\"}\n        </Box>\n      </Flex>\n      {/* Contents */}\n\n      <form onSubmit={handleSubmit}>\n        <Flex direction=\"column\" gridGap={4}>\n          <TextInput\n            label=\"Title\"\n            placeholder=\"Enter appointment title\"\n            value={title}\n            onChange={onChangeTitle}\n          />\n          <DateInput\n            label=\"Date\"\n            placeholder=\"Select schedule date\"\n            value={date}\n            onChange={onChangeDate}\n          />\n          <SelectInput\n            label=\"Status\"\n            placeholder=\"Choose status\"\n            value={String(status)}\n            onChange={onChangeStatus}\n          />\n          <Flex direction=\"row\" mt={4}>\n            {isUpdate && <Button onClick={handleDelete}>Delete</Button>}\n            <Spacer />\n            <Button type=\"submit\" colorScheme=\"green\">\n              {actionCaption}\n            </Button>\n          </Flex>\n        </Flex>\n      </form>\n    </Flex>\n  );\n};\n\nexport default AppointmentView;\n","export default __webpack_public_path__ + \"static/media/bunny.b2aeb543.svg\";","import React from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalCloseButton,\n  ModalBody,\n} from \"@chakra-ui/react\";\n\ntype Props = {\n  isOpen: boolean;\n  onClose: () => void;\n  component: any;\n};\nconst DialogBox = ({ isOpen, onClose, component }: Props) => {\n  return (\n    <Modal onClose={onClose} isOpen={isOpen} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalCloseButton />\n        <ModalBody>{component}</ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default DialogBox;\n","import React, { useState } from \"react\";\nimport { Flex, Box, Button, Spacer } from \"@chakra-ui/react\";\n// Components\nimport { SelectInput } from \"../Input\";\n// Hooks\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { setFilter } from \"../../features/schedule/scheduleSlice\";\nimport { Status } from \"../../constants/enums\";\ntype Props = {\n  isUpdate?: boolean;\n  onClose?: () => void;\n};\n\nconst Filter: React.FC<Props> = ({ onClose }) => {\n  const dispatch = useAppDispatch();\n  const [status, setStatus] = useState<Status | string>();\n  const onChangeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setStatus(e.target.value);\n  };\n\n  // Handlers\n  const handleSubmit = () => {\n    if (status !== \"\") {\n      dispatch(setFilter(`?status=${status}`));\n      onClose && onClose();\n    }\n  };\n  const clearFilter = () => {\n    dispatch(setFilter(\"\"));\n    onClose && onClose();\n  };\n  return (\n    <Flex direction=\"column\" w=\"full\" gridGap={4} justifyContent=\"center\">\n      {/* Title */}\n      <Flex direction=\"row\" w=\"full\">\n        <Box\n          flexGrow={1}\n          textAlign=\"center\"\n          fontSize={18}\n          fontWeight=\"bold\"\n          color=\"gray.800\"\n        >\n          Filter\n        </Box>\n      </Flex>\n      {/* Contents */}\n\n      <form onSubmit={handleSubmit}>\n        <Flex direction=\"column\" gridGap={4}>\n          <SelectInput\n            label=\"Status\"\n            placeholder=\"Choose status\"\n            value={String(status)}\n            onChange={onChangeStatus}\n          />\n          <Flex direction=\"row\" mt={4}>\n            <Button onClick={clearFilter} colorScheme=\"blue\" variant=\"link\">\n              Clear Filter\n            </Button>\n            <Spacer />\n            <Button type=\"submit\" colorScheme=\"blue\">\n              Filter\n            </Button>\n          </Flex>\n        </Flex>\n      </form>\n    </Flex>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { Flex, Image, Text, Button, useDisclosure } from \"@chakra-ui/react\";\n\nimport { AppointmentView } from \"../AppointmentView\";\n\nimport Bunny from \"../../assets/bunny.svg\";\nimport { DialogBox } from \"../DialogBox\";\nimport { Filter } from \"../Filter\";\n\nconst Header = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: isOpenFilter,\n    onOpen: onOpenFilter,\n    onClose: onCloseFilter,\n  } = useDisclosure();\n\n  return (\n    <>\n      <Flex direction=\"row\" gridGap={4}>\n        <Image src={Bunny} aria-label=\"Bunny\" />\n        <Flex\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"left\"\n          alignContent=\"center\"\n        >\n          <Text fontSize={18} fontWeight=\"bold\" lineHeight={0.5}>\n            Welcome\n          </Text>\n          <Text fontSize={36} fontWeight=\"bold\">\n            Kristian Espina\n          </Text>\n          <Flex direction=\"row\" gridGap={4}>\n            <Button colorScheme=\"blue\" size=\"sm\" onClick={onOpen}>\n              Create appointment\n            </Button>\n            <Button\n              colorScheme=\"blue\"\n              size=\"sm\"\n              variant=\"link\"\n              onClick={onOpenFilter}\n            >\n              Filter\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n\n      <DialogBox\n        isOpen={isOpen}\n        onClose={onClose}\n        component={<AppointmentView isUpdate={false} onClose={onClose} />}\n      />\n\n      <DialogBox\n        isOpen={isOpenFilter}\n        onClose={onCloseFilter}\n        component={<Filter onClose={onCloseFilter} />}\n      />\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n// Constants\nimport { Status } from \"../../constants/enums\";\n\ntype Props = {\n  status: Status;\n};\n\nconst getColor = (status: Status) => {\n  switch (status as any) {\n    case \"dropped\":\n      return { color: \"red.500\", bgColor: \"red.200\" };\n    case \"pending\":\n      return { color: \"gray.500\", bgColor: \"gray.200\" };\n    case \"ongoing\":\n      return { color: \"blue.500\", bgColor: \"blue.200\" };\n    case \"done\":\n      return { color: \"green.500\", bgColor: \"green.200\" };\n  }\n};\n\nconst StatusBadge = ({ status }: Props) => {\n  return (\n    <Box\n      bgColor={getColor(status)?.bgColor}\n      color={getColor(status)?.color}\n      px={3}\n      py={0.25}\n      borderRadius={16}\n      fontSize={12}\n      fontWeight=\"bold\"\n      textTransform=\"capitalize\"\n    >\n      {status}\n    </Box>\n  );\n};\n\nexport default StatusBadge;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Flex, Text, Spacer } from \"@chakra-ui/react\";\n\n// Constants\nimport { Status } from \"../../constants/enums\";\nimport StatusBadge from \"./StatusBadge\";\n\ntype Props = {\n  title: string;\n  date: Date;\n  status: Status;\n  onClick: () => void;\n};\n\nconst AppointmentEntry = ({ title, date, status, onClick }: Props) => {\n  return (\n    <Flex\n      direction=\"column\"\n      w=\"full\"\n      bgColor=\"white\"\n      p={4}\n      borderRadius={12}\n      _hover={{ cursor: \"pointer\", bgColor: \"gray.50\" }}\n      onClick={onClick}\n    >\n      <Text fontSize={14} fontWeight=\"bold\">\n        {title}\n      </Text>\n      <Flex direction=\"row\">\n        <Text fontSize={10} fontWeight=\"bold\" color=\"gray.500\">\n          {moment(date).format(\"MMM DD, YYYY\")}\n        </Text>\n        <Spacer />\n        <StatusBadge status={status} />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default AppointmentEntry;\n","import React, { useEffect } from \"react\";\nimport {\n  Flex,\n  Text,\n  useBreakpointValue,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n\n// Hooks\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport { select, updateSchedule } from \"../../features/schedule/scheduleSlice\";\n\n// Local Components\nimport AppointmentEntry from \"./AppointmentEntry\";\nimport { AppointmentView } from \"../AppointmentView\";\nimport { DialogBox } from \"../DialogBox\";\n\n// API\nimport { getSchedule } from \"../../api/schedule\";\n\nconst Appointment = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const variant = useBreakpointValue({ base: \"mobile\", md: \"md\" });\n  const { list, filter } = useAppSelector((state) => state.schedule);\n  const dispatch = useAppDispatch();\n\n  // Handlers\n  const onClick = (id: number) => {\n    dispatch(select(id));\n\n    // Create Modal if mobile\n    if (variant === \"mobile\") onOpen();\n  };\n\n  // Mount\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const { status, data } = await getSchedule(filter);\n      if (status === 200) {\n        dispatch(updateSchedule(data));\n      }\n    };\n    fetchSchedule();\n    //eslint-disable-next-line\n  }, [filter]);\n\n  return (\n    <>\n      <Flex direction=\"row\" gridGap={4} w=\"full\">\n        {/* <Image src={Bunny} aria-label=\"Bunny\" /> */}\n        <Flex\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"left\"\n          alignContent=\"center\"\n          w=\"full\"\n        >\n          <Flex direction=\"row\">\n            <Text fontSize={18} fontWeight=\"bold\" mb={4} ml={3}>\n              Appointments\n            </Text>\n          </Flex>\n          <Flex\n            direction=\"column\"\n            gridGap={4}\n            overflowY=\"hidden\"\n            maxH={[\"auto\", \"auto\", \"350px\", \"350px\"]}\n            _hover={{\n              overflowY: \"auto\",\n            }}\n          >\n            {list.map((entry) => (\n              <AppointmentEntry\n                key={entry.id}\n                title={entry.name}\n                date={entry.date}\n                status={entry.status}\n                onClick={() => onClick(entry.id)}\n              />\n            ))}\n          </Flex>\n        </Flex>\n      </Flex>\n      <DialogBox\n        isOpen={isOpen}\n        onClose={onClose}\n        component={<AppointmentView isUpdate={true} onClose={onClose} />}\n      />\n    </>\n  );\n};\n\nexport default Appointment;\n","export default __webpack_public_path__ + \"static/media/rocket.fd932cea.svg\";","import React from \"react\";\nimport { Flex, Image, Text } from \"@chakra-ui/react\";\n\nimport Rocket from \"../../assets/rocket.svg\";\nconst Error404 = () => {\n  return (\n    <Flex\n      direction=\"column\"\n      alignContent=\"center\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      w=\"full\"\n    >\n      <Image src={Rocket} maxW={300} />\n      <Text fontWeight=\"bold\" fontSize={18}>\n        Nothing to see here\n      </Text>\n      <Text fontWeight=\"regular\" fontSize={12} color=\"gray.500\">\n        Select an appointment to continue\n      </Text>\n    </Flex>\n  );\n};\n\nexport default Error404;\n","import React from \"react\";\nimport { Flex, Box, useBreakpointValue } from \"@chakra-ui/react\";\n\n// Hooks\nimport { useAppSelector } from \"../app/hooks\";\n\n// Components\nimport { Header } from \"../components/Header\";\nimport { AppointmentList } from \"../components/AppointmentList\";\nimport { AppointmentView } from \"../components/AppointmentView\";\nimport { Error404 } from \"../components/Error404\";\n\nconst Calendar = () => {\n  const displayVariant = useBreakpointValue({ base: \"none\", md: \"flex\" });\n  const { selected } = useAppSelector((state) => state.schedule);\n  return (\n    <Flex direction=\"column\" w=\"770px\" gridGap={4}>\n      <Box bgColor=\"white\" p={4} borderRadius={12}>\n        <Header />\n      </Box>\n      <Box bgColor=\"white\" px={4} py={8} borderRadius={12}>\n        <Flex direction={[\"column\", \"column\", \"row\", \"row\"]} gridGap={4}>\n          <Box minW={[\"full\", \"full\", \"240px\", \"240px\"]}>\n            <AppointmentList />\n          </Box>\n          <Box flexGrow={1} display={displayVariant}>\n            {!selected ? <Error404 /> : <AppointmentView isUpdate={true} />}\n          </Box>\n        </Flex>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Flex } from \"@chakra-ui/react\";\n\n// Local Imports\nimport { Sidebar } from \"./components/Sidebar\";\n\nimport { About, Calendar } from \"./pages\";\nfunction App() {\n  return (\n    <Router>\n      <Flex direction={[\"column\", \"column\", \"column\", \"row\"]} minH=\"100vh\">\n        <Sidebar />\n        <Flex\n          bgColor=\"gray.200\"\n          w=\"full\"\n          alignContent=\"center\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          flexGrow={1}\n          p={4}\n        >\n          <Switch>\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/\" component={Calendar} />\n          </Switch>\n        </Flex>\n      </Flex>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport scheduleReducer from \"../features/schedule/scheduleSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    schedule: scheduleReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// ChakraUI\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}